// Generated by Dagger (https://dagger.dev).
package com.checkmate.android.service;

import com.checkmate.android.util.HttpServer.ServiceManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyAccessibilityService_MembersInjector implements MembersInjector<MyAccessibilityService> {
  private final Provider<ServiceManager> serviceManagerProvider;

  public MyAccessibilityService_MembersInjector(Provider<ServiceManager> serviceManagerProvider) {
    this.serviceManagerProvider = serviceManagerProvider;
  }

  public static MembersInjector<MyAccessibilityService> create(
      Provider<ServiceManager> serviceManagerProvider) {
    return new MyAccessibilityService_MembersInjector(serviceManagerProvider);
  }

  @Override
  public void injectMembers(MyAccessibilityService instance) {
    injectServiceManager(instance, serviceManagerProvider.get());
  }

  @InjectedFieldSignature("com.checkmate.android.service.MyAccessibilityService.serviceManager")
  public static void injectServiceManager(MyAccessibilityService instance,
      ServiceManager serviceManager) {
    instance.serviceManager = serviceManager;
  }
}
