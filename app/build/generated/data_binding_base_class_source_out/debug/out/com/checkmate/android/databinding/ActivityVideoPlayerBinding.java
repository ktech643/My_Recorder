// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.media3.ui.PlayerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVideoPlayerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final PlayerView playerView;

  @NonNull
  public final LinearLayout topControls;

  @NonNull
  public final TextView txtVideoName;

  private ActivityVideoPlayerBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton btnClose, @NonNull PlayerView playerView,
      @NonNull LinearLayout topControls, @NonNull TextView txtVideoName) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.playerView = playerView;
    this.topControls = topControls;
    this.txtVideoName = txtVideoName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVideoPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVideoPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_video_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVideoPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      ImageButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.player_view;
      PlayerView playerView = ViewBindings.findChildViewById(rootView, id);
      if (playerView == null) {
        break missingId;
      }

      id = R.id.top_controls;
      LinearLayout topControls = ViewBindings.findChildViewById(rootView, id);
      if (topControls == null) {
        break missingId;
      }

      id = R.id.txt_video_name;
      TextView txtVideoName = ViewBindings.findChildViewById(rootView, id);
      if (txtVideoName == null) {
        break missingId;
      }

      return new ActivityVideoPlayerBinding((RelativeLayout) rootView, btnClose, playerView,
          topControls, txtVideoName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
