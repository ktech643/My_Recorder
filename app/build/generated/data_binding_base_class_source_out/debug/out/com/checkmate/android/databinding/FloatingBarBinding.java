// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FloatingBarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button power;

  @NonNull
  public final Button scroll;

  @NonNull
  public final Button simulateTouch;

  @NonNull
  public final Button swipe;

  @NonNull
  public final Button volumeUp;

  private FloatingBarBinding(@NonNull LinearLayout rootView, @NonNull Button power,
      @NonNull Button scroll, @NonNull Button simulateTouch, @NonNull Button swipe,
      @NonNull Button volumeUp) {
    this.rootView = rootView;
    this.power = power;
    this.scroll = scroll;
    this.simulateTouch = simulateTouch;
    this.swipe = swipe;
    this.volumeUp = volumeUp;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FloatingBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FloatingBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.floating_bar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FloatingBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.power;
      Button power = ViewBindings.findChildViewById(rootView, id);
      if (power == null) {
        break missingId;
      }

      id = R.id.scroll;
      Button scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.simulateTouch;
      Button simulateTouch = ViewBindings.findChildViewById(rootView, id);
      if (simulateTouch == null) {
        break missingId;
      }

      id = R.id.swipe;
      Button swipe = ViewBindings.findChildViewById(rootView, id);
      if (swipe == null) {
        break missingId;
      }

      id = R.id.volume_up;
      Button volumeUp = ViewBindings.findChildViewById(rootView, id);
      if (volumeUp == null) {
        break missingId;
      }

      return new FloatingBarBinding((LinearLayout) rootView, power, scroll, simulateTouch, swipe,
          volumeUp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
