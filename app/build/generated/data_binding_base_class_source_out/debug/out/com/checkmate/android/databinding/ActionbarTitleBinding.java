// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActionbarTitleBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView actionAdd;

  @NonNull
  public final ImageView actionBack;

  @NonNull
  public final ImageView actionDelete;

  @NonNull
  public final ImageView actionMenu;

  @NonNull
  public final ImageView actionSettings;

  @NonNull
  public final TextView actionTitle;

  private ActionbarTitleBinding(@NonNull RelativeLayout rootView, @NonNull ImageView actionAdd,
      @NonNull ImageView actionBack, @NonNull ImageView actionDelete, @NonNull ImageView actionMenu,
      @NonNull ImageView actionSettings, @NonNull TextView actionTitle) {
    this.rootView = rootView;
    this.actionAdd = actionAdd;
    this.actionBack = actionBack;
    this.actionDelete = actionDelete;
    this.actionMenu = actionMenu;
    this.actionSettings = actionSettings;
    this.actionTitle = actionTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActionbarTitleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActionbarTitleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.actionbar_title, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActionbarTitleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_add;
      ImageView actionAdd = ViewBindings.findChildViewById(rootView, id);
      if (actionAdd == null) {
        break missingId;
      }

      id = R.id.action_back;
      ImageView actionBack = ViewBindings.findChildViewById(rootView, id);
      if (actionBack == null) {
        break missingId;
      }

      id = R.id.action_delete;
      ImageView actionDelete = ViewBindings.findChildViewById(rootView, id);
      if (actionDelete == null) {
        break missingId;
      }

      id = R.id.action_menu;
      ImageView actionMenu = ViewBindings.findChildViewById(rootView, id);
      if (actionMenu == null) {
        break missingId;
      }

      id = R.id.action_settings;
      ImageView actionSettings = ViewBindings.findChildViewById(rootView, id);
      if (actionSettings == null) {
        break missingId;
      }

      id = R.id.action_title;
      TextView actionTitle = ViewBindings.findChildViewById(rootView, id);
      if (actionTitle == null) {
        break missingId;
      }

      return new ActionbarTitleBinding((RelativeLayout) rootView, actionAdd, actionBack,
          actionDelete, actionMenu, actionSettings, actionTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
