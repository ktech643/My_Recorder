// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogFrequencySelectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnOption1;

  @NonNull
  public final Button btnOption10;

  @NonNull
  public final Button btnOption15;

  @NonNull
  public final Button btnOption30;

  @NonNull
  public final Button btnOption5;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvTitle;

  private DialogFrequencySelectionBinding(@NonNull LinearLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnOption1, @NonNull Button btnOption10, @NonNull Button btnOption15,
      @NonNull Button btnOption30, @NonNull Button btnOption5, @NonNull TextView tvDescription,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnOption1 = btnOption1;
    this.btnOption10 = btnOption10;
    this.btnOption15 = btnOption15;
    this.btnOption30 = btnOption30;
    this.btnOption5 = btnOption5;
    this.tvDescription = tvDescription;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFrequencySelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFrequencySelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_frequency_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFrequencySelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnOption1;
      Button btnOption1 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption1 == null) {
        break missingId;
      }

      id = R.id.btnOption10;
      Button btnOption10 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption10 == null) {
        break missingId;
      }

      id = R.id.btnOption15;
      Button btnOption15 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption15 == null) {
        break missingId;
      }

      id = R.id.btnOption30;
      Button btnOption30 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption30 == null) {
        break missingId;
      }

      id = R.id.btnOption5;
      Button btnOption5 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption5 == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new DialogFrequencySelectionBinding((LinearLayout) rootView, btnCancel, btnOption1,
          btnOption10, btnOption15, btnOption30, btnOption5, tvDescription, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
