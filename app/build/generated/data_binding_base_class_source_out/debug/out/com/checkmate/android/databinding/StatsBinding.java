// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StatsBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final AppCompatTextView broadcastTime;

  @NonNull
  public final AppCompatTextView connectionName;

  @NonNull
  public final AppCompatTextView connectionName1;

  @NonNull
  public final AppCompatTextView connectionName2;

  @NonNull
  public final AppCompatTextView connectionStatus;

  @NonNull
  public final AppCompatTextView connectionStatus1;

  @NonNull
  public final AppCompatTextView connectionStatus2;

  @NonNull
  public final AppCompatTextView fps;

  @NonNull
  public final LinearLayout recIndicator;

  @NonNull
  public final AppCompatTextView zoomRatio;

  private StatsBinding(@NonNull View rootView, @NonNull AppCompatTextView broadcastTime,
      @NonNull AppCompatTextView connectionName, @NonNull AppCompatTextView connectionName1,
      @NonNull AppCompatTextView connectionName2, @NonNull AppCompatTextView connectionStatus,
      @NonNull AppCompatTextView connectionStatus1, @NonNull AppCompatTextView connectionStatus2,
      @NonNull AppCompatTextView fps, @NonNull LinearLayout recIndicator,
      @NonNull AppCompatTextView zoomRatio) {
    this.rootView = rootView;
    this.broadcastTime = broadcastTime;
    this.connectionName = connectionName;
    this.connectionName1 = connectionName1;
    this.connectionName2 = connectionName2;
    this.connectionStatus = connectionStatus;
    this.connectionStatus1 = connectionStatus1;
    this.connectionStatus2 = connectionStatus2;
    this.fps = fps;
    this.recIndicator = recIndicator;
    this.zoomRatio = zoomRatio;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static StatsBinding inflate(@NonNull LayoutInflater inflater, @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.stats, parent);
    return bind(parent);
  }

  @NonNull
  public static StatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.broadcast_time;
      AppCompatTextView broadcastTime = ViewBindings.findChildViewById(rootView, id);
      if (broadcastTime == null) {
        break missingId;
      }

      id = R.id.connection_name;
      AppCompatTextView connectionName = ViewBindings.findChildViewById(rootView, id);
      if (connectionName == null) {
        break missingId;
      }

      id = R.id.connection_name1;
      AppCompatTextView connectionName1 = ViewBindings.findChildViewById(rootView, id);
      if (connectionName1 == null) {
        break missingId;
      }

      id = R.id.connection_name2;
      AppCompatTextView connectionName2 = ViewBindings.findChildViewById(rootView, id);
      if (connectionName2 == null) {
        break missingId;
      }

      id = R.id.connection_status;
      AppCompatTextView connectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatus == null) {
        break missingId;
      }

      id = R.id.connection_status1;
      AppCompatTextView connectionStatus1 = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatus1 == null) {
        break missingId;
      }

      id = R.id.connection_status2;
      AppCompatTextView connectionStatus2 = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatus2 == null) {
        break missingId;
      }

      id = R.id.fps;
      AppCompatTextView fps = ViewBindings.findChildViewById(rootView, id);
      if (fps == null) {
        break missingId;
      }

      id = R.id.rec_indicator;
      LinearLayout recIndicator = ViewBindings.findChildViewById(rootView, id);
      if (recIndicator == null) {
        break missingId;
      }

      id = R.id.zoom_ratio;
      AppCompatTextView zoomRatio = ViewBindings.findChildViewById(rootView, id);
      if (zoomRatio == null) {
        break missingId;
      }

      return new StatsBinding(rootView, broadcastTime, connectionName, connectionName1,
          connectionName2, connectionStatus, connectionStatus1, connectionStatus2, fps,
          recIndicator, zoomRatio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
