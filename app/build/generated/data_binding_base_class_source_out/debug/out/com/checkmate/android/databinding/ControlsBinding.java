// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ControlsBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final AppCompatButton btnCapture;

  @NonNull
  public final AppCompatImageButton btnFlash;

  @NonNull
  public final AppCompatImageButton btnFlip;

  @NonNull
  public final AppCompatImageButton btnMute;

  @NonNull
  public final AppCompatImageButton btnSettings;

  @NonNull
  public final AppCompatImageButton btnShoot;

  private ControlsBinding(@NonNull View rootView, @NonNull AppCompatButton btnCapture,
      @NonNull AppCompatImageButton btnFlash, @NonNull AppCompatImageButton btnFlip,
      @NonNull AppCompatImageButton btnMute, @NonNull AppCompatImageButton btnSettings,
      @NonNull AppCompatImageButton btnShoot) {
    this.rootView = rootView;
    this.btnCapture = btnCapture;
    this.btnFlash = btnFlash;
    this.btnFlip = btnFlip;
    this.btnMute = btnMute;
    this.btnSettings = btnSettings;
    this.btnShoot = btnShoot;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ControlsBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.controls, parent);
    return bind(parent);
  }

  @NonNull
  public static ControlsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_capture;
      AppCompatButton btnCapture = ViewBindings.findChildViewById(rootView, id);
      if (btnCapture == null) {
        break missingId;
      }

      id = R.id.btn_flash;
      AppCompatImageButton btnFlash = ViewBindings.findChildViewById(rootView, id);
      if (btnFlash == null) {
        break missingId;
      }

      id = R.id.btn_flip;
      AppCompatImageButton btnFlip = ViewBindings.findChildViewById(rootView, id);
      if (btnFlip == null) {
        break missingId;
      }

      id = R.id.btn_mute;
      AppCompatImageButton btnMute = ViewBindings.findChildViewById(rootView, id);
      if (btnMute == null) {
        break missingId;
      }

      id = R.id.btn_settings;
      AppCompatImageButton btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      id = R.id.btn_shoot;
      AppCompatImageButton btnShoot = ViewBindings.findChildViewById(rootView, id);
      if (btnShoot == null) {
        break missingId;
      }

      return new ControlsBinding(rootView, btnCapture, btnFlash, btnFlip, btnMute, btnSettings,
          btnShoot);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
