// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import com.checkmate.android.ui.view.DragListView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPlaybackBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final DragListView listView;

  @NonNull
  public final TextView tvStorageLocation;

  @NonNull
  public final TextView tvStoragePath;

  @NonNull
  public final TextView txtDelete;

  @NonNull
  public final TextView txtNoData;

  @NonNull
  public final TextView txtSelect;

  @NonNull
  public final TextView txtSelectAll;

  private FragmentPlaybackBinding(@NonNull RelativeLayout rootView, @NonNull DragListView listView,
      @NonNull TextView tvStorageLocation, @NonNull TextView tvStoragePath,
      @NonNull TextView txtDelete, @NonNull TextView txtNoData, @NonNull TextView txtSelect,
      @NonNull TextView txtSelectAll) {
    this.rootView = rootView;
    this.listView = listView;
    this.tvStorageLocation = tvStorageLocation;
    this.tvStoragePath = tvStoragePath;
    this.txtDelete = txtDelete;
    this.txtNoData = txtNoData;
    this.txtSelect = txtSelect;
    this.txtSelectAll = txtSelectAll;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlaybackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlaybackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_playback, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlaybackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.list_view;
      DragListView listView = ViewBindings.findChildViewById(rootView, id);
      if (listView == null) {
        break missingId;
      }

      id = R.id.tv_storage_location;
      TextView tvStorageLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvStorageLocation == null) {
        break missingId;
      }

      id = R.id.tv_storage_path;
      TextView tvStoragePath = ViewBindings.findChildViewById(rootView, id);
      if (tvStoragePath == null) {
        break missingId;
      }

      id = R.id.txt_delete;
      TextView txtDelete = ViewBindings.findChildViewById(rootView, id);
      if (txtDelete == null) {
        break missingId;
      }

      id = R.id.txt_no_data;
      TextView txtNoData = ViewBindings.findChildViewById(rootView, id);
      if (txtNoData == null) {
        break missingId;
      }

      id = R.id.txt_select;
      TextView txtSelect = ViewBindings.findChildViewById(rootView, id);
      if (txtSelect == null) {
        break missingId;
      }

      id = R.id.txt_select_all;
      TextView txtSelectAll = ViewBindings.findChildViewById(rootView, id);
      if (txtSelectAll == null) {
        break missingId;
      }

      return new FragmentPlaybackBinding((RelativeLayout) rootView, listView, tvStorageLocation,
          tvStoragePath, txtDelete, txtNoData, txtSelect, txtSelectAll);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
