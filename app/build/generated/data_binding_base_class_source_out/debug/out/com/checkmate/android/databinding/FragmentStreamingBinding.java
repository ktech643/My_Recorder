// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStreamingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final Button btnCode;

  @NonNull
  public final Button btnLocalUpdate;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final Button btnNewUser;

  @NonNull
  public final Button btnPassword;

  @NonNull
  public final Button btnRefresh;

  @NonNull
  public final Button btnResetPassword;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final Button btnShare;

  @NonNull
  public final Button btnStart;

  @NonNull
  public final Button buttonFrequency;

  @NonNull
  public final Button buttonMode;

  @NonNull
  public final EditText edtChannel;

  @NonNull
  public final EditText edtLocalChannel;

  @NonNull
  public final EditText edtLocalPassword;

  @NonNull
  public final EditText edtLocalUser;

  @NonNull
  public final EditText edtName;

  @NonNull
  public final EditText edtPassword;

  @NonNull
  public final EditText edtPort;

  @NonNull
  public final EditText edtServerIp;

  @NonNull
  public final EditText edtUrl;

  @NonNull
  public final EditText edtUsername;

  @NonNull
  public final ListView listShare;

  @NonNull
  public final LinearLayout localFieldsContainer;

  @NonNull
  public final TextView localPathValue;

  @NonNull
  public final LinearLayout lyPassword;

  @NonNull
  public final LinearLayout lyShare;

  @NonNull
  public final LinearLayout lyUsername;

  @NonNull
  public final LinearLayout rowFrequency;

  @NonNull
  public final LinearLayout rowGps;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final SwitchCompat swtGps;

  @NonNull
  public final SwitchCompat swtRecording;

  @NonNull
  public final SwitchCompat swtStreaming;

  @NonNull
  public final TextView txtAccountType;

  @NonNull
  public final TextView txtChangePassword;

  @NonNull
  public final TextView txtLicenses;

  @NonNull
  public final TextView txtLogin;

  @NonNull
  public final TextView txtQr;

  @NonNull
  public final TextView txtSpeed;

  @NonNull
  public final TextView txtSpeedTest;

  @NonNull
  public final TextView txtStatus;

  @NonNull
  public final TextView txtUpdate;

  @NonNull
  public final TextView txtUser;

  @NonNull
  public final CardView viewLogin;

  @NonNull
  public final CardView viewShare;

  @NonNull
  public final LinearLayout viewStream;

  private FragmentStreamingBinding(@NonNull RelativeLayout rootView, @NonNull ImageView btnBack,
      @NonNull Button btnCode, @NonNull Button btnLocalUpdate, @NonNull Button btnLogin,
      @NonNull Button btnLogout, @NonNull Button btnNewUser, @NonNull Button btnPassword,
      @NonNull Button btnRefresh, @NonNull Button btnResetPassword, @NonNull Button btnSend,
      @NonNull Button btnShare, @NonNull Button btnStart, @NonNull Button buttonFrequency,
      @NonNull Button buttonMode, @NonNull EditText edtChannel, @NonNull EditText edtLocalChannel,
      @NonNull EditText edtLocalPassword, @NonNull EditText edtLocalUser, @NonNull EditText edtName,
      @NonNull EditText edtPassword, @NonNull EditText edtPort, @NonNull EditText edtServerIp,
      @NonNull EditText edtUrl, @NonNull EditText edtUsername, @NonNull ListView listShare,
      @NonNull LinearLayout localFieldsContainer, @NonNull TextView localPathValue,
      @NonNull LinearLayout lyPassword, @NonNull LinearLayout lyShare,
      @NonNull LinearLayout lyUsername, @NonNull LinearLayout rowFrequency,
      @NonNull LinearLayout rowGps, @NonNull SwipeRefreshLayout swipeRefresh,
      @NonNull SwitchCompat swtGps, @NonNull SwitchCompat swtRecording,
      @NonNull SwitchCompat swtStreaming, @NonNull TextView txtAccountType,
      @NonNull TextView txtChangePassword, @NonNull TextView txtLicenses,
      @NonNull TextView txtLogin, @NonNull TextView txtQr, @NonNull TextView txtSpeed,
      @NonNull TextView txtSpeedTest, @NonNull TextView txtStatus, @NonNull TextView txtUpdate,
      @NonNull TextView txtUser, @NonNull CardView viewLogin, @NonNull CardView viewShare,
      @NonNull LinearLayout viewStream) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnCode = btnCode;
    this.btnLocalUpdate = btnLocalUpdate;
    this.btnLogin = btnLogin;
    this.btnLogout = btnLogout;
    this.btnNewUser = btnNewUser;
    this.btnPassword = btnPassword;
    this.btnRefresh = btnRefresh;
    this.btnResetPassword = btnResetPassword;
    this.btnSend = btnSend;
    this.btnShare = btnShare;
    this.btnStart = btnStart;
    this.buttonFrequency = buttonFrequency;
    this.buttonMode = buttonMode;
    this.edtChannel = edtChannel;
    this.edtLocalChannel = edtLocalChannel;
    this.edtLocalPassword = edtLocalPassword;
    this.edtLocalUser = edtLocalUser;
    this.edtName = edtName;
    this.edtPassword = edtPassword;
    this.edtPort = edtPort;
    this.edtServerIp = edtServerIp;
    this.edtUrl = edtUrl;
    this.edtUsername = edtUsername;
    this.listShare = listShare;
    this.localFieldsContainer = localFieldsContainer;
    this.localPathValue = localPathValue;
    this.lyPassword = lyPassword;
    this.lyShare = lyShare;
    this.lyUsername = lyUsername;
    this.rowFrequency = rowFrequency;
    this.rowGps = rowGps;
    this.swipeRefresh = swipeRefresh;
    this.swtGps = swtGps;
    this.swtRecording = swtRecording;
    this.swtStreaming = swtStreaming;
    this.txtAccountType = txtAccountType;
    this.txtChangePassword = txtChangePassword;
    this.txtLicenses = txtLicenses;
    this.txtLogin = txtLogin;
    this.txtQr = txtQr;
    this.txtSpeed = txtSpeed;
    this.txtSpeedTest = txtSpeedTest;
    this.txtStatus = txtStatus;
    this.txtUpdate = txtUpdate;
    this.txtUser = txtUser;
    this.viewLogin = viewLogin;
    this.viewShare = viewShare;
    this.viewStream = viewStream;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStreamingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStreamingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_streaming, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStreamingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_code;
      Button btnCode = ViewBindings.findChildViewById(rootView, id);
      if (btnCode == null) {
        break missingId;
      }

      id = R.id.btn_local_update;
      Button btnLocalUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnLocalUpdate == null) {
        break missingId;
      }

      id = R.id.btn_login;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btn_logout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btn_new_user;
      Button btnNewUser = ViewBindings.findChildViewById(rootView, id);
      if (btnNewUser == null) {
        break missingId;
      }

      id = R.id.btn_password;
      Button btnPassword = ViewBindings.findChildViewById(rootView, id);
      if (btnPassword == null) {
        break missingId;
      }

      id = R.id.btn_refresh;
      Button btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.btn_reset_password;
      Button btnResetPassword = ViewBindings.findChildViewById(rootView, id);
      if (btnResetPassword == null) {
        break missingId;
      }

      id = R.id.btn_send;
      Button btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.btn_share;
      Button btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.btn_start;
      Button btnStart = ViewBindings.findChildViewById(rootView, id);
      if (btnStart == null) {
        break missingId;
      }

      id = R.id.button_frequency;
      Button buttonFrequency = ViewBindings.findChildViewById(rootView, id);
      if (buttonFrequency == null) {
        break missingId;
      }

      id = R.id.button_mode;
      Button buttonMode = ViewBindings.findChildViewById(rootView, id);
      if (buttonMode == null) {
        break missingId;
      }

      id = R.id.edt_channel;
      EditText edtChannel = ViewBindings.findChildViewById(rootView, id);
      if (edtChannel == null) {
        break missingId;
      }

      id = R.id.edt_local_channel;
      EditText edtLocalChannel = ViewBindings.findChildViewById(rootView, id);
      if (edtLocalChannel == null) {
        break missingId;
      }

      id = R.id.edt_local_password;
      EditText edtLocalPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtLocalPassword == null) {
        break missingId;
      }

      id = R.id.edt_local_user;
      EditText edtLocalUser = ViewBindings.findChildViewById(rootView, id);
      if (edtLocalUser == null) {
        break missingId;
      }

      id = R.id.edt_name;
      EditText edtName = ViewBindings.findChildViewById(rootView, id);
      if (edtName == null) {
        break missingId;
      }

      id = R.id.edt_password;
      EditText edtPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtPassword == null) {
        break missingId;
      }

      id = R.id.edt_port;
      EditText edtPort = ViewBindings.findChildViewById(rootView, id);
      if (edtPort == null) {
        break missingId;
      }

      id = R.id.edt_server_ip;
      EditText edtServerIp = ViewBindings.findChildViewById(rootView, id);
      if (edtServerIp == null) {
        break missingId;
      }

      id = R.id.edt_url;
      EditText edtUrl = ViewBindings.findChildViewById(rootView, id);
      if (edtUrl == null) {
        break missingId;
      }

      id = R.id.edt_username;
      EditText edtUsername = ViewBindings.findChildViewById(rootView, id);
      if (edtUsername == null) {
        break missingId;
      }

      id = R.id.list_share;
      ListView listShare = ViewBindings.findChildViewById(rootView, id);
      if (listShare == null) {
        break missingId;
      }

      id = R.id.local_fields_container;
      LinearLayout localFieldsContainer = ViewBindings.findChildViewById(rootView, id);
      if (localFieldsContainer == null) {
        break missingId;
      }

      id = R.id.local_path_value;
      TextView localPathValue = ViewBindings.findChildViewById(rootView, id);
      if (localPathValue == null) {
        break missingId;
      }

      id = R.id.ly_password;
      LinearLayout lyPassword = ViewBindings.findChildViewById(rootView, id);
      if (lyPassword == null) {
        break missingId;
      }

      id = R.id.ly_share;
      LinearLayout lyShare = ViewBindings.findChildViewById(rootView, id);
      if (lyShare == null) {
        break missingId;
      }

      id = R.id.ly_username;
      LinearLayout lyUsername = ViewBindings.findChildViewById(rootView, id);
      if (lyUsername == null) {
        break missingId;
      }

      id = R.id.row_frequency;
      LinearLayout rowFrequency = ViewBindings.findChildViewById(rootView, id);
      if (rowFrequency == null) {
        break missingId;
      }

      id = R.id.row_gps;
      LinearLayout rowGps = ViewBindings.findChildViewById(rootView, id);
      if (rowGps == null) {
        break missingId;
      }

      id = R.id.swipe_refresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.swt_gps;
      SwitchCompat swtGps = ViewBindings.findChildViewById(rootView, id);
      if (swtGps == null) {
        break missingId;
      }

      id = R.id.swt_recording;
      SwitchCompat swtRecording = ViewBindings.findChildViewById(rootView, id);
      if (swtRecording == null) {
        break missingId;
      }

      id = R.id.swt_streaming;
      SwitchCompat swtStreaming = ViewBindings.findChildViewById(rootView, id);
      if (swtStreaming == null) {
        break missingId;
      }

      id = R.id.txt_account_type;
      TextView txtAccountType = ViewBindings.findChildViewById(rootView, id);
      if (txtAccountType == null) {
        break missingId;
      }

      id = R.id.txt_change_password;
      TextView txtChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (txtChangePassword == null) {
        break missingId;
      }

      id = R.id.txt_licenses;
      TextView txtLicenses = ViewBindings.findChildViewById(rootView, id);
      if (txtLicenses == null) {
        break missingId;
      }

      id = R.id.txt_login;
      TextView txtLogin = ViewBindings.findChildViewById(rootView, id);
      if (txtLogin == null) {
        break missingId;
      }

      id = R.id.txt_qr;
      TextView txtQr = ViewBindings.findChildViewById(rootView, id);
      if (txtQr == null) {
        break missingId;
      }

      id = R.id.txt_speed;
      TextView txtSpeed = ViewBindings.findChildViewById(rootView, id);
      if (txtSpeed == null) {
        break missingId;
      }

      id = R.id.txt_speed_test;
      TextView txtSpeedTest = ViewBindings.findChildViewById(rootView, id);
      if (txtSpeedTest == null) {
        break missingId;
      }

      id = R.id.txt_status;
      TextView txtStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtStatus == null) {
        break missingId;
      }

      id = R.id.txt_update;
      TextView txtUpdate = ViewBindings.findChildViewById(rootView, id);
      if (txtUpdate == null) {
        break missingId;
      }

      id = R.id.txt_user;
      TextView txtUser = ViewBindings.findChildViewById(rootView, id);
      if (txtUser == null) {
        break missingId;
      }

      id = R.id.view_login;
      CardView viewLogin = ViewBindings.findChildViewById(rootView, id);
      if (viewLogin == null) {
        break missingId;
      }

      id = R.id.view_share;
      CardView viewShare = ViewBindings.findChildViewById(rootView, id);
      if (viewShare == null) {
        break missingId;
      }

      id = R.id.view_stream;
      LinearLayout viewStream = ViewBindings.findChildViewById(rootView, id);
      if (viewStream == null) {
        break missingId;
      }

      return new FragmentStreamingBinding((RelativeLayout) rootView, btnBack, btnCode,
          btnLocalUpdate, btnLogin, btnLogout, btnNewUser, btnPassword, btnRefresh,
          btnResetPassword, btnSend, btnShare, btnStart, buttonFrequency, buttonMode, edtChannel,
          edtLocalChannel, edtLocalPassword, edtLocalUser, edtName, edtPassword, edtPort,
          edtServerIp, edtUrl, edtUsername, listShare, localFieldsContainer, localPathValue,
          lyPassword, lyShare, lyUsername, rowFrequency, rowGps, swipeRefresh, swtGps, swtRecording,
          swtStreaming, txtAccountType, txtChangePassword, txtLicenses, txtLogin, txtQr, txtSpeed,
          txtSpeedTest, txtStatus, txtUpdate, txtUser, viewLogin, viewShare, viewStream);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
