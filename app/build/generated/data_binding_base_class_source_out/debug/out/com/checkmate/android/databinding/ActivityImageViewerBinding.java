// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import com.github.chrisbanes.photoview.PhotoView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityImageViewerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final ImageButton btnInfo;

  @NonNull
  public final ImageButton btnRotate;

  @NonNull
  public final ImageButton btnZoomIn;

  @NonNull
  public final ImageButton btnZoomOut;

  @NonNull
  public final LinearLayout controlsLayout;

  @NonNull
  public final LinearLayout detailsLayout;

  @NonNull
  public final PhotoView imageView;

  @NonNull
  public final LinearLayout topControls;

  @NonNull
  public final TextView txtImageDetails;

  @NonNull
  public final TextView txtImageName;

  private ActivityImageViewerBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton btnClose, @NonNull ImageButton btnInfo, @NonNull ImageButton btnRotate,
      @NonNull ImageButton btnZoomIn, @NonNull ImageButton btnZoomOut,
      @NonNull LinearLayout controlsLayout, @NonNull LinearLayout detailsLayout,
      @NonNull PhotoView imageView, @NonNull LinearLayout topControls,
      @NonNull TextView txtImageDetails, @NonNull TextView txtImageName) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnInfo = btnInfo;
    this.btnRotate = btnRotate;
    this.btnZoomIn = btnZoomIn;
    this.btnZoomOut = btnZoomOut;
    this.controlsLayout = controlsLayout;
    this.detailsLayout = detailsLayout;
    this.imageView = imageView;
    this.topControls = topControls;
    this.txtImageDetails = txtImageDetails;
    this.txtImageName = txtImageName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityImageViewerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityImageViewerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_image_viewer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityImageViewerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      ImageButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_info;
      ImageButton btnInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnInfo == null) {
        break missingId;
      }

      id = R.id.btn_rotate;
      ImageButton btnRotate = ViewBindings.findChildViewById(rootView, id);
      if (btnRotate == null) {
        break missingId;
      }

      id = R.id.btn_zoom_in;
      ImageButton btnZoomIn = ViewBindings.findChildViewById(rootView, id);
      if (btnZoomIn == null) {
        break missingId;
      }

      id = R.id.btn_zoom_out;
      ImageButton btnZoomOut = ViewBindings.findChildViewById(rootView, id);
      if (btnZoomOut == null) {
        break missingId;
      }

      id = R.id.controls_layout;
      LinearLayout controlsLayout = ViewBindings.findChildViewById(rootView, id);
      if (controlsLayout == null) {
        break missingId;
      }

      id = R.id.details_layout;
      LinearLayout detailsLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailsLayout == null) {
        break missingId;
      }

      id = R.id.image_view;
      PhotoView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.top_controls;
      LinearLayout topControls = ViewBindings.findChildViewById(rootView, id);
      if (topControls == null) {
        break missingId;
      }

      id = R.id.txt_image_details;
      TextView txtImageDetails = ViewBindings.findChildViewById(rootView, id);
      if (txtImageDetails == null) {
        break missingId;
      }

      id = R.id.txt_image_name;
      TextView txtImageName = ViewBindings.findChildViewById(rootView, id);
      if (txtImageName == null) {
        break missingId;
      }

      return new ActivityImageViewerBinding((RelativeLayout) rootView, btnClose, btnInfo, btnRotate,
          btnZoomIn, btnZoomOut, controlsLayout, detailsLayout, imageView, topControls,
          txtImageDetails, txtImageName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
