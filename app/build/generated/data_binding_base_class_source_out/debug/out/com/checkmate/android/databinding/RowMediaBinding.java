// Generated by view binder compiler. Do not edit!
package com.checkmate.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.checkmate.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowMediaBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox checkbox;

  @NonNull
  public final ImageView icShare;

  @NonNull
  public final ImageView icTrash;

  @NonNull
  public final ImageView imgThumbnail;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtDuration;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtTime;

  @NonNull
  public final TextView txtType;

  private RowMediaBinding(@NonNull LinearLayout rootView, @NonNull CheckBox checkbox,
      @NonNull ImageView icShare, @NonNull ImageView icTrash, @NonNull ImageView imgThumbnail,
      @NonNull TextView txtDate, @NonNull TextView txtDuration, @NonNull TextView txtName,
      @NonNull TextView txtTime, @NonNull TextView txtType) {
    this.rootView = rootView;
    this.checkbox = checkbox;
    this.icShare = icShare;
    this.icTrash = icTrash;
    this.imgThumbnail = imgThumbnail;
    this.txtDate = txtDate;
    this.txtDuration = txtDuration;
    this.txtName = txtName;
    this.txtTime = txtTime;
    this.txtType = txtType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMediaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMediaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_media, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMediaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkbox;
      CheckBox checkbox = ViewBindings.findChildViewById(rootView, id);
      if (checkbox == null) {
        break missingId;
      }

      id = R.id.ic_share;
      ImageView icShare = ViewBindings.findChildViewById(rootView, id);
      if (icShare == null) {
        break missingId;
      }

      id = R.id.ic_trash;
      ImageView icTrash = ViewBindings.findChildViewById(rootView, id);
      if (icTrash == null) {
        break missingId;
      }

      id = R.id.img_thumbnail;
      ImageView imgThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (imgThumbnail == null) {
        break missingId;
      }

      id = R.id.txt_date;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txt_duration;
      TextView txtDuration = ViewBindings.findChildViewById(rootView, id);
      if (txtDuration == null) {
        break missingId;
      }

      id = R.id.txt_name;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txt_time;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      id = R.id.txt_type;
      TextView txtType = ViewBindings.findChildViewById(rootView, id);
      if (txtType == null) {
        break missingId;
      }

      return new RowMediaBinding((LinearLayout) rootView, checkbox, icShare, icTrash, imgThumbnail,
          txtDate, txtDuration, txtName, txtTime, txtType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
